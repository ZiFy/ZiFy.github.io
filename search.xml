<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F06%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[sonarQube 分析Objective-C]]></title>
    <url>%2F2018%2F12%2F06%2FsonarQube%20%E5%88%86%E6%9E%90Objective-C%2F</url>
    <content type="text"><![CDATA[sonarQube 分析Objective-C安装安装homebrew1ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 安装mysql1brew install mysql mysql 配置教程:https://www.jianshu.com/p/4cb5ef29a099 安装Java安装java ：http://www.oracle.com/technetwork/java/javase/downloads/index.html 安装sonarQube1brew install sonarqube 也可以自己到官网下载http://www.sonarqube.org/downloads/ 解压后移到/usr/local我的目录1/usr/local/sonarqube-6.7.5 安装xcpretty1gem install xcpretty 安装OCLint12brew tap oclint/formulaebrew install oclint 安装sonar-scanner1brew install sonar-scanner 安装gcovr1brew install gcovr 安装sonar-objective-c-plugin配置sonarqube的配置文件conf/sonar.properties 配置sonar连接mysql// 注： 我配置mysql重启服务，链接不上。 12345678910111213// 配置sonar连接mysqlsonar.jdbc.url=jdbc:mysql://localhost:3306/sonar?useUnicode=true&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=true&amp;useConfigs=maxPerformance&amp;useSSL=falsesonar.jdbc.username=rootsonar.jdbc.password=root// 其他sonar.sorceEncoding=UTF-8sonar.login=adminsonar.password=admin运行支持的命令有： start/restart/stop/statussudo /usr/local/sonar/bin/macosx-universal-64/sonar.sh start 其他安装sonarQube汉化包https://github.com/SonarQubeCommunity/sonar-l10n-zh/releases/latest找到jar包，添加到extensions/plugins 我用的sonarQube6.5对应汉化包1.17 添加完成后，需要重启服务才能生效。 1sonar restart]]></content>
  </entry>
  <entry>
    <title><![CDATA[use rn by Cocoapods]]></title>
    <url>%2F2018%2F12%2F06%2Fuse%20rn%20by%20Cocoapods%2F</url>
    <content type="text"><![CDATA[use rn by Cocoapods配置信息rn版本0.50.0 cocoapods:1.4 Podfile 1234567891011121314151617181920212223242526272829303132333435363738394041platform :ios, &apos;8.0&apos;$rn_node_moudles_dir = &apos;../RN/node_modules&apos;$rn_react_pod_dir = $rn_node_moudles_dir+&apos;/react-native&apos;def ymm_rn_debug_pod # Your &apos;node_modules&apos; directory is probably in the root of your project, # but if not, adjust the `:path` accordingly pod &apos;React&apos;, :path =&gt; $rn_react_pod_dir, :subspecs =&gt; [ &apos;BatchedBridge&apos;, #if RN &gt;= 0.43 #CxxBridge 代替 BatchedBridge #&apos;CxxBridge&apos;, &apos;Core&apos;, &apos;DevSupport&apos;, # Include this to enable In-App Devmenu if RN &gt;= 0.43 &apos;RCTNetwork&apos;, &apos;RCTWebSocket&apos;, # needed for debugging &apos;RCTActionSheet&apos;, &apos;RCTAnimation&apos;, &apos;RCTImage&apos;, &apos;RCTText&apos;,# &apos;RCTActionSheet&apos;,# &apos;RCTBlob&apos;,# &apos;RCTSettings&apos;,# &apos;RCTVibration&apos;,# &apos;RCTLinkingIOS&apos;,# &apos;RCTAnimation&apos;,# &apos;RCTGeolocation&apos;, # Add any other subspecs you want to use in your project ] # Explicitly include Yoga if you are using RN &gt;= 0.42.0 pod &apos;yoga&apos;, :path =&gt; $rn_react_pod_dir+&apos;/ReactCommon/yoga&apos; # Third party deps podspec link pod &apos;DoubleConversion&apos;, :podspec =&gt; $rn_react_pod_dir+&apos;/third-party-podspecs/DoubleConversion.podspec&apos; pod &apos;GLog&apos;, :podspec =&gt; $rn_react_pod_dir+&apos;/third-party-podspecs/GLog.podspec&apos; pod &apos;Folly&apos;, :podspec =&gt; $rn_react_pod_dir+&apos;/third-party-podspecs/Folly.podspec&apos;end 用CxxBridge替换BatchedBridge将podfile修改后，会出现问题 https://github.com/facebook/react-native/issues/16381 https://github.com/facebook/react-native/pull/16664 123456789101112131415161718 s.subspec &quot;jschelpers&quot; do |ss| ss.dependency &quot;Folly&quot;, &quot;2016.09.26.00&quot;+ ss.dependency &quot;React/PrivateDatabase&quot; ss.compiler_flags = folly_compiler_flags ss.source_files = &quot;ReactCommon/jschelpers/*.&#123;cpp,h&#125;&quot; ss.private_header_files = &quot;ReactCommon/jschelpers/*.h&quot; ss.pod_target_xcconfig = &#123; &quot;HEADER_SEARCH_PATHS&quot; =&gt; &quot;\&quot;$(PODS_TARGET_SRCROOT)/ReactCommon\&quot;&quot; &#125; ss.framework = &quot;JavaScriptCore&quot; end + s.subspec &quot;PrivateDatabase&quot; do |ss|+ ss.source_files = &quot;ReactCommon/privatedata/*.&#123;cpp,h&#125;&quot;+ ss.private_header_files = &quot;ReactCommon/privatedata/*.h&quot;+ end+ s.subspec &quot;cxxreact&quot; do |ss| ss.dependency &quot;React/jschelpers&quot; ss.dependency &quot;boost&quot;]]></content>
  </entry>
  <entry>
    <title><![CDATA[我的Hexo使用教程]]></title>
    <url>%2F2018%2F12%2F06%2F%E6%88%91%E7%9A%84Hexo%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[使用Hexo搭建博客 Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server123$ hexo server简写$ hexo s More info: Server Generate static files123$ hexo generate简写$ hexo g 或者 More info: Generating Deploy to remote sites123$ hexo deploy简写$ hexo d clean小心使用清理命令，会把post目录下面的文件都清理掉 1hexo clean More info: Deployment 快捷命令：测试：1hexo g &amp;&amp; hexo s 发布： 1hexo g &amp;&amp; hexo d 安装主题资源网站 https://hexo.io/themes/ 下载主题下载主题到themes 目录下。有2种主流方式。 git clone可以直接 clone 到 themes 目录下，优点是如果对主题有调整需求可以同时提交到 git 控制中。 1$ git clone https://github.com/olOwOlo/hugo-theme-even themes/even git submodule也可以添加到 git 的 submodule 中，优点是后面讲到用 travis 自动部署时比较方便。如果需要对主题做更改，最好 fork 主题再做改动。 123$ git submodule add https://github.com/olOwOlo/hugo-theme-even.git themes/evengit submodule add https://github.com/ZiFy/hexo-theme-next.git themes/next 配置安装到根目录下找到配置文件_config.yml -&gt; theme: landscape theme: 主题keylandscape: 对应themes目录下的文件夹名 使用travis 自动部署THANKShexo从零开始到搭建完整 5分钟 搭建免费个人博客]]></content>
  </entry>
  <entry>
    <title><![CDATA[Jenkens CI iOS Project]]></title>
    <url>%2F2018%2F12%2F06%2FJenkens%20CI%20iOS%20Project%2F</url>
    <content type="text"><![CDATA[Jenkens CI iOS Projecttest package AppStore loginkeychains配置 1$&#123;KEYCHAIN_PATH&#125; $&#123;KEYCHAIN_PASSWORD&#125; $&#123;CODE_SIGNING_IDENTITY&#125; loginkeychains.png 编译准备 123456789cd YUNDADAsh ../scripts/AsignBuildNumber.sh line $&#123;BUILD_NUM&#125;pod install --verboseif [ -f &quot;$&#123;WORKSPACE&#125;/scripts/copyFiles.sh&quot; ];then sh $&#123;WORKSPACE&#125;/scripts/copyFiles.shelse echo &quot;文件不存在&quot;fi xcode配置xcode_1xcode_2xcode_3xcode_4 4.上传到appstore 123python upload.py SHIPPER REL 1.1.0 1 ./build/YUNDADA-Shipper.ipapython upload.py EXPRESS REL 1.1.0 1 ./build/YUNDADA-Line.ipa 上传appStore1234IPA_PATH=&quot;$&#123;WORKSPACE&#125;/build/YUNDADA-Line.ipa&quot;altoolPath=&quot;/Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool&quot;&quot;$&#123;altoolPath&#125;&quot; --validate-app -f &quot;$&#123;IPA_PATH&#125;&quot; -u transda56@aliyun.com -p ofnc-vnyh-gdig-izka -t ios --output-format xml&quot;$&#123;altoolPath&#125;&quot; --upload-app -f &quot;$&#123;IPA_PATH&#125;&quot; -u transda56@aliyun.com -p ofnc-vnyh-gdig-izka -t ios --output-format xml 5.通知到钉钉dingding.png]]></content>
  </entry>
  <entry>
    <title><![CDATA[程序员装逼指南之Blog]]></title>
    <url>%2F2018%2F12%2F05%2F%E7%A8%8B%E5%BA%8F%E5%91%98%E8%A3%85%E9%80%BC%E6%8C%87%E5%8D%97%E4%B9%8BBlog%2F</url>
    <content type="text"><![CDATA[GitHub PagesGitHub Pages hexo教程以下几点特别说明一下使用hexo deploy发布123456# _config.ymldeploy: type: git repo: https://github.com/ZiFy/ZiFy.github.io.git branch: master message: &quot;hexo自动发布&quot; 特别提醒：这个命令会把你的文件都删了，只保留发布的文件。所以，请一定要选择另一个分支开发，这样才能把markdown文件保留下来。 1234一键发布测试$ hexo g&amp;&amp;hexo s一键发布命令$ hexo g&amp;&amp;hexo d 使用CI自动发布markdown支持本地图片使用hexo-asset-image Nextnext 是一款了不起的hexo主题，支持很多功能。最重要是风格适合程序员。 [你是我的眼，眼里只有黑白色] hexo-theme-next 可以添加的功能Next第三方服务集成 评论 Gitalkgithub OAuth Apps Annie主题使用Gitalk 123456789# /theme/next/_config.ymlgitalk: enable: true github_id: Zify # Github repo owner repo: blog_comment_repo # Repository name to store issues. client_id: c30a8xxxx # Github Application Client ID client_secret: 916ce8fxx # Github Application Client Secret admin_user: Zify # GitHub repo owner and collaborators, only these guys can initialize github issues distraction_free_mode: true # Facebook-like distraction free mode 未找到相关的 Issues 进行评论使用自己的账号登录一下，打开页面就会自动初始化。 Baidu analyticshttps://tongji.baidu.com/ google analyticshttps://analytics.google.com/ 使用busuanzi统计阅读次数12345678busuanzi_count: enable: true total_visitors: true total_visitors_icon: user total_views: true total_views_icon: eye post_views: true post_views_icon: eye RSS1$ npm install --save hexo-generator-feed next配置RSS 标签页面，分类页面hexo 创建文章、标签、分类 页面-阅读排行hexo page 阅读排行 next自定义样式hexo-theme-next主题设置 Hexo-NexT配置超炫网页效果 hexo-admin发布平台（不重要，hexo3.8, hexo-admin2.3.0下存在bug） hexo-admin 那个人的hexo-admin教程 123npm install --save hexo-adminhexo server -dopen http://localhost:4000/admin/ SEO优化Hexo博客Next主题SEO优化方法]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>centOS</tag>
        <tag>tomcat</tag>
      </tags>
  </entry>
</search>
